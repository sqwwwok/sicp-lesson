#lang sicp
(define (make-rat x y)
  (cond ((> (* x y) 0) (cons (abs x) (abs y)))
        ((< y 0) (cons (- x) (- y)))
        (else (cons x y))))

(define (make-segment start end)
  (cons start end))
(define (start-segment segment)
  (car segment))
(define (end-segment segment)
  (cdr segment))

(define (make-point x y)
  (cons x y))
(define (x-point point)
  (car point))
(define (y-point point)
  (cdr point))

(define (midpoint-segment segment)
  (define x1 (x-point (start-segment segment)))
  (define y1 (y-point (start-segment segment)))
  (define x2 (x-point (end-segment segment)))
  (define y2 (y-point (end-segment segment)))
  (print-point (make-point (/ (+ x1 x2) 2)
                           (/ (+ y1 y2) 2))))

(define (print-point point)
  (newline)
  (display "(")
  (display (x-point point))
  (display ",")
  (display (y-point point))
  (display ")"))